@model S2B_Final.Models.DenunciaDeleteViewModel

@{
    ViewBag.Title = "Excluir Denúncia";
}
<script type="text/javascript" src="~/GoogleMaps/mapa.js"></script>

<link href="http://fonts.googleapis.com/css?family=Open+Sans:600" type="text/css" rel="stylesheet" />
<link href="~/GoogleMaps/estilo.css" type="text/css" rel="stylesheet" />


<h2>Excluir Denúncia</h2>

<h3>Você tem certeza que deseja excluir?</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<hr />
<div class="form-horizontal">
    <div class="form-group col-lg-6">


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.TipoOcorrencia, htmlAttributes: new { @class = "control-label  col-md-4 " })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.TipoOcorrencia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoOcorrencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescricaoOcorrido, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.DescricaoOcorrido, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.DescricaoOcorrido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataOcorrido, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.DataOcorrido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataOcorrido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HorarioOcorrido, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.HorarioOcorrido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HorarioOcorrido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocalOcorrido, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.LocalOcorrido, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocalOcorrido, "", new { @class = "text-danger" })
              
            </div>

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.CaracteristicasSuspeito, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.DisplayFor(model => model.CaracteristicasSuspeito, new { htmlAttributes = new { @class = "form-control " } })
                @Html.ValidationMessageFor(model => model.CaracteristicasSuspeito, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => model.Ip, new { htmlAttributes = new { @class = "esconde" } })


        @Html.HiddenFor(model => model.Navegador, new { htmlAttributes = new { @class = "esconde" } })

        @Html.HiddenFor(model => model.Latitude, new { htmlAttributes = new { @class = "esconde" } })


        @Html.HiddenFor(model => model.Longitude, new { htmlAttributes = new { @class = "esconde" } })



    </div>
    <div class="form-group col-lg-6">

        <div class="campos">
            <label for="mapa">Mapa:</label>

        </div>
        <div id="mapa"></div>

        <input type="hidden" id="txtLatitude" name="txtLatitude" />
        <input type="hidden" id="txtLongitude" name="txtLongitude" />

    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Excluir" class="btn btn-primary" /> |
            <a href="@Url.Action("Index", "Denuncia")" class="btn btn-danger">Cancelar</a>
        </div>
    </div>
</div>

}

<script>
    var geocoder;
    var map;
    var marker;
    var latitude = document.getElementById("Latitude").value;
    var longitude = document.getElementById("Longitude").value;



    function initialize() {

        var latlng = new google.maps.LatLng(latitude, longitude);
        var options = {
            zoom: 16,
            center: latlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById("mapa"), options);

        geocoder = new google.maps.Geocoder();

        marker = new google.maps.Marker({
            map: map,
            draggable: true,
        });

        marker.setPosition(latlng);
    }
</script>
<script type="text/javascript" src="~/GoogleMaps/mapa.js"></script>